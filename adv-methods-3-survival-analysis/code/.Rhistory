filter(period == 1) %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(period, educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd, anychd,
cvd, hyperten, timeap, timemi, timemifc, timechd, timecvd, timedth,
timehyp, timestrk))
data.10yr_followup <- data %>%
# Select baseline covariates for this project
filter(period == 1) %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(period, educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd,
anychd, cvd, hyperten, stroke, timeap, timemi, timemifc, timechd,
timecvd, timedth, timehyp, timestrk))
data.10yr_followup <- data %>%
# Select baseline covariates for this project
filter(period == 1) %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(period, educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd,
anychd, cvd, hyperten, stroke, timeap, timemi, timemifc, timechd,
timecvd, timedth, timehyp, timestrk))
data.cleanup <- data %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(period, educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd,
anychd, cvd, hyperten, stroke, timeap, timemi, timemifc, timechd,
timecvd, timedth, timehyp, timestrk))
data.cleanup <- data %>%
# Encode binary variables
mutate(
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(period, educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd,
anychd, cvd, hyperten, stroke, timeap, timemi, timemifc, timechd,
timecvd, timedth, timehyp, timestrk))
data.10yr_followup <- data.cleanup %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
)
)
# Encode binary variables and deselect non-targeted baseline variables/events
data.cleanup <- data %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd, anychd,
cvd, hyperten, stroke, timeap, timemi, timemifc, timechd, timecvd,
timedth, timehyp, timestrk))
# Manipulate data to include only desirable covariates and 10yr of follow-up TTE data
data.cleanup <- data %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd, anychd,
cvd, hyperten, stroke, timeap, timemi, timemifc, timechd, timecvd,
timedth, timehyp, timestrk))
# NOTE: No encoding information available for e
data.10yr_followup <- data.cleanup %>%
filter(period == 1) %>% select(-period)
data.cleanup <- data %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd, anychd,
cvd, hyperten, stroke, timeap, timemi, timemifc, timechd, timecvd,
timedth, timehyp, timestrk))
# NOTE: No encoding information available for education levels; check if these
# are available before actually removing
# Select baseline covariates for analysis
data.10yr_followup <- data.cleanup %>%
filter(period == 1) %>% select(-period)
# Baseline data missingness
data.10yr_followup %>% naniar::vis_miss() +
scale_fill_manual(values = c("gray15", "darkgoldenrod")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 0, size = 8)) +
guides(fill = guide_legend(title = "Missing"))
# Import data
data <- paste(getwd(), "frmgham2.csv", sep = "/") %>%
read_delim(delim = ",") %>% # Read in csv
janitor::clean_names()      # Clean up feature names
# Manipulate data to include only desirable covariates and 10yr of follow-up TTE data
# Keeping this separate from filtering for period 1 to look at time-varying covariates
data.cleanup <- data %>%
# Censor if the stroke occurs after first 10 years of follow-up
mutate(
stroke_10yr = case_when(
timestrk >= 365*10 ~ 0,       # If timestrk > 10 years, censor stroke
timestrk < 365*10 ~ stroke    # Else leave as reported stroke
),
# Cap time to stroke to 10 years; only considering first 10 years of follow-up
timestrk_10yr = case_when(
timestrk >= 365*10 ~ 3650,    # If timestrk > 10 years, cap at 10 years
timestrk < 365*10 ~ timestrk  # Else leave as reported timestrk
),
# Encode binary variables
sex = factor(sex, levels = c(1, 2), labels = c("Male", "Female")),
cursmoke = factor(cursmoke, levels = c(0, 1), labels = c("No", "Yes")),
diabetes = factor(diabetes, levels = c(0, 1), labels = c("No", "Yes")),
bpmeds = factor(bpmeds, levels = c(0, 1), labels = c("No", "Yes")),
prevchd = factor(prevchd, levels = c(0, 1), labels = c("No", "Yes")),
prevap = factor(prevap, levels = c(0, 1), labels = c("No", "Yes")),
prevmi = factor(prevmi, levels = c(0, 1), labels = c("No", "Yes")),
prevstrk = factor(prevstrk, levels = c(0, 1), labels = c("No", "Yes")),
prevhyp = factor(prevhyp, levels = c(0, 1), labels = c("No", "Yes"))
) %>%
# Remove non-informative baseline variables and non-targeted events
select(-c(educ, hdlc, ldlc, time, death, angina, hospmi, mi_fchd, anychd,
cvd, hyperten, stroke, timeap, timemi, timemifc, timechd, timecvd,
timedth, timehyp, timestrk))
# NOTE: No encoding information available for education levels; check if these
# are available before actually removing
# Select baseline covariates for analysis
data.10yr_followup <- data.cleanup %>%
filter(period == 1) %>% select(-period)
# Display number of events
data.10yr_followup %>% select(stroke_10yr) %>% table()
# Baseline data missingness
# Covariates with missing data: totchol, cigpday, bpmeds, glucose
data.10yr_followup %>% naniar::vis_miss() +
scale_fill_manual(values = c("gray15", "darkgoldenrod")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 0, size = 8)) +
guides(fill = guide_legend(title = "Missing"))
data.10yr_followup %>%
filter(timestrk_10yr < 365*10)
ggplot(aes(x = timestrk_10yr)) +
geom_histogram(stat = "bin", bins = 15, color = "white", fill = "lightsteelblue") +
ggtitle("Time-to-Event Distribution for Subjects Who Experience a Stroke") +
labs(x = "") +
theme_bw() +
theme(plot.title = element_text(hjust=0.5, size=11),
axis.title = element_text(size=8))
data.10yr_followup %>%
filter(timestrk_10yr < 365*10) %>%
ggplot(aes(x = timestrk_10yr)) +
geom_histogram(stat = "bin", bins = 15, color = "white", fill = "lightsteelblue") +
ggtitle("Time-to-Event Distribution for Subjects Who Experience a Stroke") +
labs(x = "") +
theme_bw() +
theme(plot.title = element_text(hjust=0.5, size=11),
axis.title = element_text(size=8))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ hyperten, data = data.10yr_followup)
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyper, data = data.10yr_followup)
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, ylim=c(0.9, 1))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, ylim=c(0.9, 1))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, xlim = c(0, 365*10), ylim = c(0.9, 1))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
font.x = c(12),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, xlim = c(0, 365*10), ylim = c(0.8, 1))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
font.x = c(2),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, xlim = c(0, 365*10), ylim = c(0.8, 1))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
font.x = c(10),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, xlim = c(0, 365*10), ylim = c(0.8, 1))
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
font.x = c(10), font.y = c(10),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, xlim = c(0, 365*10), ylim = c(0.8, 1))
View(data)
?Surv
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
knitr::opts_chunk$set(message = F, warning = F)
require(tidyverse)
require(readr)
require(naniar)
require(janitor)
require(ggVennDiagram)
require(survival)
require(survminer)
require(tableone)
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) %>%
#rename("Hard-Drug Non-Users" = "No", "Hard-Drug Users" = "Yes") %>%
write.table(paste(getwd(), "/../Reports/FiguresTables/TableOne.tsv", sep = ""),
sep = "\t", row.names = T, col.names = NA)
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) #%>%
#rename("Hard-Drug Non-Users" = "No", "Hard-Drug Users" = "Yes") %>%
#write.table(paste(getwd(), "/../Reports/FiguresTables/TableOne.tsv", sep = ""),
#            sep = "\t", row.names = T, col.names = NA)
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "timestrk_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) #%>%
#rename("Hard-Drug Non-Users" = "No", "Hard-Drug Users" = "Yes") %>%
#write.table(paste(getwd(), "/../Reports/FiguresTables/TableOne.tsv", sep = ""),
#            sep = "\t", row.names = T, col.names = NA)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test)
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test) #%>%
#rename("Hard-Drug Non-Users" = "No", "Hard-Drug Users" = "Yes") %>%
#write.table(paste(getwd(), "/../Reports/FiguresTables/TableOne.tsv", sep = ""),
#            sep = "\t", row.names = T, col.names = NA)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) #%>%
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) %>%
knitr::kable()#%>%
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) %>%
knitr::kable(caption = "Demographics for study population by sex",
booktabs = T, format = "latex", longtable = TRUE)
#rename("Hard-Drug Non-Users" = "No", "Hard-Drug Users" = "Yes") %>%
#write.table(paste(getwd(), "/../Reports/FiguresTables/TableOne.tsv", sep = ""),
#            sep = "\t", row.names = T, col.names = NA)
# Fit survival curve based on
survival_mod <- survfit(Surv(timestrk_10yr, stroke_10yr) ~ prevhyp, data = data.10yr_followup)
ggsurvplot(data = data.10yr_followup, fit = survival_mod, xlab = "Day",
ylab = "Survival Probability", palette = c("#221D23", "#DDB967"),
font.x = c(10), font.y = c(10), font.tickslab = c(10),
#risk.table = TRUE, tables.height = 0.30, pval = TRUE, conf.int = TRUE,
surv.median.line = "hv", censor = TRUE, xlim = c(0, 365*10), ylim = c(0.8, 1))
table1
table1 %>%
as.data.frame()
print(table1, print = F, nonnormal = T, minMax = T) %>%
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = T) %>%
as.data.frame() %>%
select(-test, -p) %>%
knitr::kable(caption = "Demographics for study population by sex", booktabs = T, format = "latex", longtable = TRUE)
lifecycle::last_lifecycle_warnings()
?print
?tableone
knitr::opts_chunk$set(message = F, warning = F)
require(tidyverse)
require(readr)
require(naniar)
require(janitor)
require(ggVennDiagram)
require(survival)
require(survminer)
require(tableone)
require(knitr)
print(table1, print = F, nonnormal = T, minMax = F) %>%
as.data.frame() %>%
select(-test, -p)
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = F) %>%
as.data.frame() %>%
select(-test, -p) %>%
dplyr::rename("Incidence of Stroke in 10-year Follow Up" = "stroke_10yr = 1 (%)")
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = F) %>%
as.data.frame() %>%
select(-test, -p) %>%
set_rownames(c("Incidence of Stroke in 10-year Follow Up (%)", "Age", "BMI",
"Total Cholesterol", "Systolic BP", "Diastolic BP", "Current Smoker (%)")) %>%
knitr::kable(caption = "Demographics for study population by sex",
booktabs = T, longtable = TRUE)
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = F) %>%
as.data.frame() %>%
select(-n, -test, -p) %>%
set_colnames(c("Male, n = 1944", "Female, n = 2490")) %>%
set_rownames(c("Incidence of Stroke in 10-year Follow Up (%)", "Age", "BMI",
"Total Cholesterol", "Systolic BP", "Diastolic BP", "Current Smoker (%)")) %>%
knitr::kable(caption = "Demographics for study population by sex",
booktabs = T, longtable = TRUE)
print(table1, print = F, nonnormal = T, minMax = F) %>%
as.data.frame()
# Table 1 (source: https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html)
vars <- c("stroke_10yr", "age", "bmi", "totchol", "sysbp", "diabp", "cursmoke")
cat_vars <- c("stroke_10yr", "cursmoke")
table1 <- CreateTableOne(vars = vars, factorVars = cat_vars, strata = "sex", data = data.10yr_followup)
print(table1, print = F, nonnormal = T, minMax = F) %>%
as.data.frame() %>%
select(-test, -p) %>%
slice(-1) %>%
set_colnames(c("Male, n = 1944", "Female, n = 2490")) %>%
set_rownames(c("Incidence of Stroke in 10-year Follow Up (%)", "Age", "BMI",
"Total Cholesterol", "Systolic BP", "Diastolic BP", "Current Smoker (%)")) %>%
knitr::kable(caption = "Demographics for study population by sex",
booktabs = T, longtable = TRUE)
?set_rownames
?kable
?print
?tableone
?footnote
?kable::footnote
require(kableExtra)
?kable::footnote
?footnote
